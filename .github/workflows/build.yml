name: build

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        include:
          - os: ubuntu-latest
            TARGET: linux
    steps:
      - name: 'Download jextract'
        id: jextract
        uses: oracle-actions/setup-java@v1
        with:
          install: false
          uri: https://download.java.net/java/early_access/jextract/2/openjdk-19-jextract+2-3_${{ matrix.TARGET }}-x64_bin.tar.gz

      - name: 'Extract jextract'
        shell: sh
        run: |
          mkdir -p /tmp/jextract
          tar --strip-components=1 -xvf ${{ steps.jextract.outputs.archive }} -C /tmp/jextract
          export PATH=${PATH}:/tmp/jextract/bin

      - name: 'Download JDK 19'
        id: jdk_19
        uses: oracle-actions/setup-java@v1
        with:
          website: jdk.java.net
          release: 19

      - name: 'Check out repository'
        uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: prepare-project
        shell: bash
        run: |
          export PATH=${PATH}:/tmp/jextract/bin
          mkdir -p build
          jextract -I /usr/local/include @jextract_dump.txt include/c_api.h

      - name: Set up Homebrew
        id: set-up-homebrew
        uses: Homebrew/actions/setup-homebrew@master
        with:
          test-bot: false

      - name: 'install prerequisites'
        shell: bash
        run: |
          brew install gcc
          brew install conan
          brew install boost

      - name: conan profile
        shell: bash
        run: |
          conan profile new default --detect
          conan profile update settings.compiler.libcxx=libstdc++11 default
          conan profile update settings.compiler.version=9.4 default
          conan profile update env.CC=/usr/bin/clang default
          conan profile update env.CXX=/usr/bin/clang++ default
          mkdir -p build && cd build
          conan install --build=missing ..
          cmake .. -DCMAKE_BUILD_TYPE=release
          cmake --build .

      - name: version
        id: version
        shell: bash
        run: echo "version_var=$(date +'%Y.%m.%d')" >> $GITHUB_OUTPUT

      - name: mvn
        shell: bash
        run: |
          cd build
          make java-sources

      - name: jar
        shell: bash
        run: |
          cd build
          make jar

      - name: 'make release'
        if: github.event_name == 'push'
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: ${{ secrets.GH_RELEASE_TOKEN }}
          automatic_release_tag: ${{ env.version_var }}
          prerelease: false
          title: CPP UDP server ${{ env.version_var }}
          files: |
            LICENSE
            target/*.jar
